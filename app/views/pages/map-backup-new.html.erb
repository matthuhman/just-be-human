<div class="home-page">
  <div class="d-flex flex-column align-items-center justify-content-center current-zip floater">
    <h3>
      <span class="zip-floater">Zip: </span><%= @geopoint.zip %>
    </h3>
    <h3>
      <span class="date-floater">Date: </span><%= @cleanup_date.strftime("%m-%d-%Y") %>
    </h3>
  </div>
  <aside class="home-page-aside">
    <div id="opps-near-me">
      <% if @opportunities.size > 0 %>
        <% @opportunities.each do |opportunity| %>
          <%= render 'opportunity_row', opportunity: opportunity %>
        <% end %>
      <% else %>
        <div class="no-open-opportunities">
          It looks like there aren't any cleanups near you on <%= @cleanup_date.strftime("%m/%d") %>-  you should start one!
          <% if current_user %>
            <a class="new-cleanup-link" href="/opportunities/new">
              <div class="new-cleanup-link-text">
                Create a cleanup
              </div>
            </a>
          <% end %>
        </div>
      <% end %>
    </div>
  </aside>
  <div id="map" class="map-div"></div>
</div>
<script>
  let map;


  function initMap()
  {
    map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: <%= @geopoint.latitude %>, lng: <%= @geopoint.longitude %>},
      zoom: 13,
      streetViewControl: false,
      mapTypeControl: false,
      fullscreenControl: false
    });

    let oppos = <%= raw @opportunities.map.to_json {|o|}.html_safe %>;


    let greenIcon = {
      url: "http://maps.google.com/mapfiles/ms/icons/green.png",
      scaledSize: new google.maps.Size(42,42)
    };
    let blueIcon = {
      url: "http://maps.google.com/mapfiles/ms/icons/blue.png",
      scaledSize: new google.maps.Size(42,42)
    };
    let redIcon = {
      url: "http://maps.google.com/mapfiles/ms/icons/red.png",
      scaledSize: new google.maps.Size(42,42)
    };
    let yellowIcon = {
      url: "http://maps.google.com/mapfiles/ms/icons/yellow.png",
      scaledSize: new google.maps.Size(42,42)
    };

    let infoWindow = new google.maps.InfoWindow();

    for (let i = 0, length = oppos.length; i < length; i++)
    {
      let data = oppos[i],
        LatLng = {lat: parseFloat(data.latitude), lng: parseFloat(data.longitude)};

      data.contentString =
        `<div id="marker-content">
          <div id="siteNotice"></div>
          <h4 id="marker-title" class="marker-title"> ${data.title}</h4>
          <p id="marker-participants" class="marker-participants">Volunteer count: ${data.volunteer_count} / ${data.volunteers_required}</p>
          <p id="marker-followers" class="marker-followers">Followers: ${data.follower_count}</p>
          <a href="/opportunities/${data.id}" id="marker-link" class="marker-link">See Opportunity Details</a>
         </div>`;

      let marker;

      marker = new google.maps.Marker({
        position: LatLng,
        map: map,
        animation: google.maps.Animation.DROP,
        icon: greenIcon
      });


      (function (marker, data) {
        google.maps.event.addListener(marker, "click", function (e) {
          infoWindow.setContent(data.contentString);
          infoWindow.open(map, marker);
          event.stopPropagation(); // this prevents propagation of marker click to map click
        });
      })(marker, data);

      //marker.addListener('click', assignListener(marker, infoWindow));
    }

    map.addListener("click", function() {
      infoWindow.close();
    });
  }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDvo5jgtwJAlgCwAA9_5v_pUgphXxe9ntY&callback=initMap" async defer></script>





<!--
let map;
let infoWindow;

function initMap() {
  map = new google.maps.Map(document.getElementById("map"), {
    zoom: 5,
    center: { lat: 24.886, lng: -70.268 },
    mapTypeId: "terrain",
  });
  // Define the LatLng coordinates for the polygon.
  const triangleCoords = [
    { lat: 25.774, lng: -80.19 },
    { lat: 18.466, lng: -66.118 },
    { lat: 32.321, lng: -64.757 },
  ];
  // Construct the polygon.
  const bermudaTriangle = new google.maps.Polygon({
    paths: triangleCoords,
    strokeColor: "#FF0000",
    strokeOpacity: 0.8,
    strokeWeight: 3,
    fillColor: "#FF0000",
    fillOpacity: 0.35,
  });
  bermudaTriangle.setMap(map);
  // Add a listener for the click event.
  bermudaTriangle.addListener("click", showArrays);
  infoWindow = new google.maps.InfoWindow();
}

function showArrays(event) {
  // Since this polygon has only one path, we can call getPath() to return the
  // MVCArray of LatLngs.
  const polygon = this;
  const vertices = polygon.getPath();
  let contentString =
    "<b>Bermuda Triangle polygon</b><br>" +
    "Clicked location: <br>" +
    event.latLng.lat() +
    "," +
    event.latLng.lng() +
    "<br>";

  // Iterate over the vertices.
  for (let i = 0; i < vertices.getLength(); i++) {
    const xy = vertices.getAt(i);
    contentString +=
      "<br>" + "Coordinate " + i + ":<br>" + xy.lat() + "," + xy.lng();
  }
  // Replace the info window's content and position.
  infoWindow.setContent(contentString);
  infoWindow.setPosition(event.latLng);
  infoWindow.open(map);
} -->
